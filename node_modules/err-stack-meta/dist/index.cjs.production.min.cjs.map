{"version":3,"file":"index.cjs.production.min.cjs","sources":["../src/index.ts"],"sourcesContent":["import { ITSPickExtra, ITSRequiredPick } from 'ts-type/lib/type/record';\nimport { parseStack, formatMessagePrefix, IParsed } from 'error-stack2';\n\nexport interface IErrStackMeta<E extends Error> extends ITSRequiredPick<IParsed, 'rawTrace' | 'type'>\n{\n\tprefix: string;\n\tmessage: string;\n\tstack: string;\n\terror: E;\n}\n\nexport function errStackMeta<E extends Error>(error: E): IErrStackMeta<E>\n{\n\tlet es = parseStack(error.stack, error.message);\n\n\treturn {\n\t\ttype: es.type,\n\t\tprefix: formatMessagePrefix(es) + ': ',\n\t\tmessage: es.message,\n\t\trawTrace: es.rawTrace,\n\t\tstack: es.rawTrace.join('\\n'),\n\t\terror,\n\t}\n}\n\nexport function stringifyStackMeta(meta: ITSPickExtra<IErrStackMeta<any>, 'prefix' | 'message'>, stack?: string)\n{\n\tstack ??= meta.stack;\n\n\tif (stack.length)\n\t{\n\t\tstack = `\\n${stack}`;\n\t}\n\n\treturn `${meta.prefix}${meta.message ?? ''}${stack}`\n}\n\nexport default errStackMeta\n"],"names":["type","es","prefix","message","rawTrace","stack","join","error","_stack","meta"],"mappings":"iKAWA,MAAA,CAYAA,KAZAC,EAAAD,KAgBCE,gCAAe,KAIdC,QApBFF,EAAAE,QAqBEC,SArBFH,EAAAG,SAuBCC,MAAAJ,EAAAG,SAAeE,KAAA,MACfC,MAAAA,6IAZD,QAAAC,EAAAH,SAAA,IAAAG,IAAAH,EAAAI,EAAAJ"}