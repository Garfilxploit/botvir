{"version":3,"file":"index.esm.mjs","sources":["../src/index.ts"],"sourcesContent":["import { errStackMeta } from 'err-stack-meta';\n\nexport interface IOptions\n{\n\t/**\n\t * @default 1\n\t */\n\tstart?: number;\n\t/**\n\t * @default 5\n\t */\n\tend?: number;\n}\n\n/**\n * reduce stame stack from sub error with parent error\n *\n * @example\n * const stackReduce = errStackReduceCore(mainError, options.stackReduceOptions);\n *\n * console.dir(stackReduce(error));\n */\nexport function errStackReduceCore(mainError: Error, mainOptions?: IOptions)\n{\n\tconst stack = errStackMeta(mainError).stack;\n\tconst { start = 1, end = 5 } = mainOptions ?? {};\n\n\treturn (error: Error, options?: IOptions) =>\n\t{\n\t\tlet _meta = errStackMeta(error);\n\t\tlet _stack = _meta.stack.split('\\n');\n\n\t\tlet _start = options?.start ?? start;\n\t\tlet _end = options?.end ?? end;\n\n\t\tlet i: number = _start;\n\n\t\tdo\n\t\t{\n\t\t\tif (_stack[i]?.length && stack.includes(_stack[i].trim()))\n\t\t\t{\n\t\t\t\t_stack = _stack.slice(0, i)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\twhile (i++ < _end || i >= _stack.length);\n\n\t\treturn {\n\t\t\t..._meta,\n\t\t\tstack: _stack.join('\\n'),\n\t\t\toriginalStack: _meta.stack,\n\t\t}\n\t}\n}\n\n/**\n * reduce stame stack from sub error with parent error\n *\n * recommend use {@link errStackReduceCore}\n */\nexport function errStackReduce(error: Error, mainError: Error, mainOptions?: IOptions)\n{\n\treturn errStackReduceCore(mainError, mainOptions)(error)\n}\n\nexport default errStackReduceCore\n"],"names":["start","end","mainOptions","error","options","_options$start","_options$end","_stack$i","_stack","i","length","stack","includes","trim","slice"],"mappings":";;;yBAAAA,OAAAA,IAAAA,GAAAA,KAAAC,IAAAA,KAAAC,QAAAA,IAAAA,IAAA;EA2CI,OAAA,CAAAC,GAAAC;IAAA,IAAAC,GAAAC;;;;MASH,IAAA,UAAAC,IAAAC,EAAAC,YAAA,MAAAF,KAAAA,EAAAG,UAAAC,EAAAC,SAAAJ,EAAAC,GAAAI,SAAA;QACAL,IAAAA,EAAAM,MAAA,GAAAL;QASO;;;;;;;;;;;;;;;"}